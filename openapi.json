{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/crawling/crawl": {
      "post": {
        "operationId": "CrawlingController_crawlUrl",
        "summary": "Basic web page crawling",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully crawled the webpage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlResult"
                }
              }
            }
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/advanced-crawl": {
      "post": {
        "operationId": "CrawlingController_crawlWebsiteWithEmbedding",
        "summary": "Advanced website crawling with embeddings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvancedCrawlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully crawled website and generated embeddings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedCrawlResult"
                }
              }
            }
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/search": {
      "post": {
        "operationId": "CrawlingController_searchSimilar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/batch-crawl": {
      "post": {
        "operationId": "CrawlingController_batchCrawl",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/status/{jobId}": {
      "get": {
        "operationId": "CrawlingController_getCrawlStatus",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/results/{jobId}": {
      "get": {
        "operationId": "CrawlingController_getCrawlResults",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/slack/messages": {
      "get": {
        "operationId": "SlackController_getBotMessages",
        "summary": "Get bot messages from Slack channels",
        "parameters": [
          {
            "name": "channelId",
            "required": false,
            "in": "query",
            "description": "Slack channel ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of messages to retrieve",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oldest",
            "required": false,
            "in": "query",
            "description": "Oldest message timestamp",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "latest",
            "required": false,
            "in": "query",
            "description": "Latest message timestamp",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved bot messages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BotMessagesResponse"
                }
              }
            }
          }
        },
        "tags": [
          "slack"
        ]
      },
      "put": {
        "operationId": "SlackController_updateMessage",
        "summary": "Update a Slack message",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageActionResponse"
                }
              }
            }
          }
        },
        "tags": [
          "slack"
        ]
      },
      "delete": {
        "operationId": "SlackController_deleteMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      },
      "post": {
        "operationId": "SlackController_sendMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/messages/{channelId}/{timestamp}": {
      "get": {
        "operationId": "SlackController_getMessageDetails",
        "parameters": [
          {
            "name": "channelId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      },
      "delete": {
        "operationId": "SlackController_deleteMessageByParams",
        "parameters": [
          {
            "name": "channelId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/channels": {
      "get": {
        "operationId": "SlackController_getChannelList",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/stats": {
      "get": {
        "operationId": "SlackController_getBotStats",
        "parameters": [
          {
            "name": "channelId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/test-auth": {
      "get": {
        "operationId": "SlackController_testAuth",
        "summary": "Test Slack bot authentication",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Authentication test result"
          }
        },
        "tags": [
          "slack"
        ]
      }
    }
  },
  "info": {
    "title": "Chatbot Admin API",
    "description": "NestJS chatbot admin application with Slack integration and web crawling",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "crawling",
      "description": "Web crawling operations"
    },
    {
      "name": "slack",
      "description": "Slack bot message management"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CrawlRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to crawl",
            "example": "https://example.com"
          },
          "depth": {
            "type": "number",
            "description": "Crawling depth",
            "example": 1,
            "minimum": 1
          },
          "selector": {
            "type": "string",
            "description": "CSS selector to extract specific content",
            "example": ".content"
          }
        },
        "required": [
          "url"
        ]
      },
      "CrawlResult": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Crawled URL",
            "example": "https://example.com"
          },
          "title": {
            "type": "string",
            "description": "Page title",
            "example": "Example Page"
          },
          "content": {
            "type": "string",
            "description": "Extracted content",
            "example": "This is the page content..."
          },
          "links": {
            "description": "Found links",
            "example": [
              "https://example.com/page1",
              "https://example.com/page2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Crawl timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "url",
          "title",
          "content",
          "links",
          "timestamp"
        ]
      },
      "AdvancedCrawlRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Website URL to crawl with embeddings",
            "example": "https://example.com"
          },
          "maxPages": {
            "type": "number",
            "description": "Maximum number of pages to crawl",
            "example": 10,
            "minimum": 1,
            "maximum": 50
          }
        },
        "required": [
          "url"
        ]
      },
      "AdvancedCrawlResult": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Crawled URL",
            "example": "https://example.com"
          },
          "title": {
            "type": "string",
            "description": "Page title",
            "example": "Example Page"
          },
          "content": {
            "type": "string",
            "description": "Extracted content",
            "example": "This is the page content..."
          },
          "links": {
            "description": "Found links",
            "example": [
              "https://example.com/page1",
              "https://example.com/page2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Crawl timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "chunks": {
            "description": "Text chunks created",
            "example": [
              "chunk1",
              "chunk2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "embeddingDimensions": {
            "type": "number",
            "description": "Embedding vector dimensions",
            "example": 1024
          },
          "totalChunks": {
            "type": "number",
            "description": "Total number of chunks created",
            "example": 25
          },
          "executionTime": {
            "type": "number",
            "description": "Total execution time in milliseconds",
            "example": 15000
          }
        },
        "required": [
          "url",
          "title",
          "content",
          "links",
          "timestamp"
        ]
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query for similarity search",
            "example": "machine learning"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results to return",
            "example": 10,
            "minimum": 1,
            "maximum": 50
          }
        },
        "required": [
          "query"
        ]
      },
      "BotMessagesResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "Array of bot messages",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "stats": {
            "type": "object",
            "description": "Message statistics"
          },
          "success": {
            "type": "boolean",
            "description": "Operation success status",
            "example": true
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Response timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "messages",
          "stats",
          "success",
          "timestamp"
        ]
      },
      "UpdateMessageRequest": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "description": "Slack channel ID",
            "example": "C1234567890"
          },
          "timestamp": {
            "type": "string",
            "description": "Message timestamp",
            "example": "1609459200.000400"
          },
          "text": {
            "type": "string",
            "description": "New message text",
            "example": "Updated message content"
          },
          "blocks": {
            "description": "Slack blocks for rich formatting",
            "example": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Hello *World*"
                }
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "channelId",
          "timestamp",
          "text"
        ]
      },
      "MessageActionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Message updated successfully"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Response timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "success",
          "timestamp"
        ]
      },
      "DeleteMessageRequest": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "description": "Slack channel ID",
            "example": "C1234567890"
          },
          "timestamp": {
            "type": "string",
            "description": "Message timestamp",
            "example": "1609459200.000400"
          }
        },
        "required": [
          "channelId",
          "timestamp"
        ]
      },
      "SendMessageRequest": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "description": "Slack channel ID",
            "example": "C1234567890"
          },
          "text": {
            "type": "string",
            "description": "Message text",
            "example": "Hello from the bot!"
          },
          "blocks": {
            "description": "Slack blocks for rich formatting",
            "example": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Hello *World*"
                }
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "channelId",
          "text"
        ]
      }
    }
  }
}