{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/openapi.json": {
      "get": {
        "operationId": "AppController_getOpenApiJson",
        "summary": "Get OpenAPI JSON specification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OpenAPI JSON specification returned as JSON response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "documentation"
        ]
      }
    },
    "/crawling/crawl": {
      "post": {
        "operationId": "CrawlingController_crawlUrl",
        "summary": "Basic web page crawling",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully crawled the webpage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlResult"
                }
              }
            }
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/process": {
      "post": {
        "operationId": "CrawlingController_processContent",
        "summary": "Universal content processing",
        "description": "Process any type of content: websites, PDFs, Markdown files, or GitHub repositories",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniversalCrawlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully processed content and generated embeddings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedCrawlResult"
                }
              }
            }
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/advanced-crawl": {
      "post": {
        "operationId": "CrawlingController_crawlWebsiteWithEmbedding",
        "summary": "Advanced website crawling with embeddings (deprecated - use /process instead)",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniversalCrawlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully crawled website and generated embeddings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedCrawlResult"
                }
              }
            }
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/search": {
      "post": {
        "operationId": "CrawlingController_searchSimilar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/batch-crawl": {
      "post": {
        "operationId": "CrawlingController_batchCrawl",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/status/{jobId}": {
      "get": {
        "operationId": "CrawlingController_getCrawlStatus",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/results/{jobId}": {
      "get": {
        "operationId": "CrawlingController_getCrawlResults",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/crawling/history": {
      "get": {
        "operationId": "CrawlingController_getCrawledThreads",
        "summary": "Get crawled thread groups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved crawled thread groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "history": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "Root message content"
                          },
                          "link": {
                            "type": "string",
                            "description": "link URL"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                          },
                          "count": {
                            "type": "number",
                            "description": "Number of messages in thread group"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "number",
                      "description": "Total number of thread groups"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "crawling"
        ]
      }
    },
    "/slack/messages": {
      "get": {
        "operationId": "SlackController_getBotMessages",
        "summary": "Get all bot messages from Slack channels",
        "parameters": [
          {
            "name": "channelId",
            "required": false,
            "in": "query",
            "description": "Slack channel ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all bot messages"
          }
        },
        "tags": [
          "slack"
        ]
      },
      "put": {
        "operationId": "SlackController_updateMessage",
        "summary": "Update a Slack message",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageActionResponse"
                }
              }
            }
          }
        },
        "tags": [
          "slack"
        ]
      },
      "delete": {
        "operationId": "SlackController_deleteMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      },
      "post": {
        "operationId": "SlackController_sendMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/messages/{channelId}/{timestamp}": {
      "get": {
        "operationId": "SlackController_getMessageDetails",
        "parameters": [
          {
            "name": "channelId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      },
      "delete": {
        "operationId": "SlackController_deleteMessageByParams",
        "parameters": [
          {
            "name": "channelId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/channels": {
      "get": {
        "operationId": "SlackController_getChannelList",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/stats": {
      "get": {
        "operationId": "SlackController_getBotStats",
        "parameters": [
          {
            "name": "channelId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/slack/test-auth": {
      "get": {
        "operationId": "SlackController_testAuth",
        "summary": "Test Slack bot authentication",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Authentication test result"
          }
        },
        "tags": [
          "slack"
        ]
      }
    },
    "/api/threads/summary": {
      "get": {
        "operationId": "ThreadController_getThreadSummary",
        "summary": "스레드 전체 요약 정보 조회",
        "description": "전체 스레드 개수, 카테고리별 통계, 최근 스레드, 인기 태그 등을 포함한 요약 정보를 반환합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "스레드 요약 정보 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadSummaryDto"
                }
              }
            }
          }
        },
        "tags": [
          "Threads"
        ]
      }
    },
    "/api/threads/stats/categories": {
      "get": {
        "operationId": "ThreadController_getCategoryStats",
        "summary": "카테고리별 스레드 통계 조회",
        "description": "각 카테고리별 스레드 개수와 비율을 반환합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "카테고리별 통계 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThreadCategoryStatsDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Threads"
        ]
      }
    },
    "/api/threads/category/{category}": {
      "get": {
        "operationId": "ThreadController_getThreadsByCategory",
        "summary": "특정 카테고리의 스레드 목록 조회",
        "description": "지정된 카테고리에 속하는 모든 스레드를 반환합니다.",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "path",
            "description": "조회할 스레드 카테고리",
            "schema": {
              "enum": [
                "technical",
                "question",
                "discussion",
                "announcement",
                "other"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "카테고리별 스레드 목록 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThreadDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Threads"
        ]
      }
    },
    "/api/threads/search": {
      "get": {
        "operationId": "ThreadController_searchThreads",
        "summary": "스레드 벡터 검색",
        "description": "자연어 쿼리를 사용하여 유사한 스레드를 벡터 검색으로 찾습니다.",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "벡터 검색 결과",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThreadDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Threads"
        ]
      }
    },
    "/api/threads/{id}/related": {
      "get": {
        "operationId": "ThreadController_getRelatedThreads",
        "summary": "관련 스레드 조회",
        "description": "특정 스레드와 유사한 다른 스레드들을 반환합니다.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "스레드 ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "관련 스레드 목록",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThreadDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Threads"
        ]
      }
    },
    "/api/threads": {
      "get": {
        "operationId": "ThreadController_getThreads",
        "summary": "스레드 목록 조회 (필터링 및 페이지네이션 지원)",
        "description": "다양한 조건으로 스레드를 필터링하고 페이지네이션을 적용하여 조회합니다.",
        "parameters": [
          {
            "name": "category",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "technical",
                "question",
                "discussion",
                "announcement",
                "other"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "페이지 번호 (1부터 시작)",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "페이지당 항목 수",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "검색 키워드",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "시작 날짜 (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "종료 날짜 (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resolvedOnly",
            "required": false,
            "in": "query",
            "description": "해결된 스레드만 조회",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "스레드 목록 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreadListResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Threads"
        ]
      }
    },
    "/api/threads/stats/overview": {
      "get": {
        "operationId": "ThreadController_getOverviewStats",
        "summary": "스레드 개요 통계",
        "description": "카테고리별 개수와 기본 통계 정보를 간단히 반환합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "개요 통계 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalThreads": {
                      "type": "number",
                      "description": "전체 스레드 수"
                    },
                    "resolvedThreads": {
                      "type": "number",
                      "description": "해결된 스레드 수"
                    },
                    "unresolvedThreads": {
                      "type": "number",
                      "description": "미해결 스레드 수"
                    },
                    "categoryCounts": {
                      "type": "object",
                      "properties": {
                        "technical": {
                          "type": "number"
                        },
                        "question": {
                          "type": "number"
                        },
                        "discussion": {
                          "type": "number"
                        },
                        "announcement": {
                          "type": "number"
                        },
                        "other": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Threads"
        ]
      }
    }
  },
  "info": {
    "title": "Chatbot Admin API",
    "description": "NestJS chatbot admin application with Slack integration and web crawling",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "crawling",
      "description": "Web crawling operations"
    },
    {
      "name": "slack",
      "description": "Slack bot message management"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CrawlRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to crawl",
            "example": "https://example.com"
          },
          "depth": {
            "type": "number",
            "description": "Crawling depth",
            "example": 1,
            "minimum": 1
          },
          "selector": {
            "type": "string",
            "description": "CSS selector to extract specific content",
            "example": ".content"
          }
        },
        "required": [
          "url"
        ]
      },
      "CrawlResult": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Crawled URL",
            "example": "https://example.com"
          },
          "title": {
            "type": "string",
            "description": "Page title",
            "example": "Example Page"
          },
          "content": {
            "type": "string",
            "description": "Extracted content",
            "example": "This is the page content..."
          },
          "links": {
            "description": "Found links",
            "example": [
              "https://example.com/page1",
              "https://example.com/page2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Crawl timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "url",
          "title",
          "content",
          "links",
          "timestamp"
        ]
      },
      "UniversalCrawlRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to process (website, PDF, Markdown, or GitHub repository)",
            "example": "https://example.com or https://example.com/document.pdf or https://github.com/user/repo"
          },
          "maxPages": {
            "type": "number",
            "description": "Maximum number of pages to crawl (for websites only)",
            "example": 10,
            "minimum": 1,
            "maximum": 150
          }
        },
        "required": [
          "url"
        ]
      },
      "AdvancedCrawlResult": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Crawled URL",
            "example": "https://example.com"
          },
          "title": {
            "type": "string",
            "description": "Page title",
            "example": "Example Page"
          },
          "content": {
            "type": "string",
            "description": "Extracted content",
            "example": "This is the page content..."
          },
          "links": {
            "description": "Found links",
            "example": [
              "https://example.com/page1",
              "https://example.com/page2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Crawl timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "chunks": {
            "description": "Text chunks created",
            "example": [
              "chunk1",
              "chunk2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "embeddingDimensions": {
            "type": "number",
            "description": "Embedding vector dimensions",
            "example": 1024
          },
          "totalChunks": {
            "type": "number",
            "description": "Total number of chunks created",
            "example": 25
          },
          "executionTime": {
            "type": "number",
            "description": "Total execution time in milliseconds",
            "example": 15000
          }
        },
        "required": [
          "url",
          "title",
          "content",
          "links",
          "timestamp"
        ]
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query for similarity search",
            "example": "machine learning"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results to return",
            "example": 10,
            "minimum": 1,
            "maximum": 50
          }
        },
        "required": [
          "query"
        ]
      },
      "UpdateMessageRequest": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "description": "Slack channel ID",
            "example": "C1234567890"
          },
          "timestamp": {
            "type": "string",
            "description": "Message timestamp",
            "example": "1609459200.000400"
          },
          "text": {
            "type": "string",
            "description": "New message text",
            "example": "Updated message content"
          },
          "blocks": {
            "description": "Slack blocks for rich formatting",
            "example": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Hello *World*"
                }
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "channelId",
          "timestamp",
          "text"
        ]
      },
      "MessageActionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Message updated successfully"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string",
            "description": "Response timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "success",
          "timestamp"
        ]
      },
      "DeleteMessageRequest": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "description": "Slack channel ID",
            "example": "C1234567890"
          },
          "timestamp": {
            "type": "string",
            "description": "Message timestamp",
            "example": "1609459200.000400"
          }
        },
        "required": [
          "channelId",
          "timestamp"
        ]
      },
      "SendMessageRequest": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "description": "Slack channel ID",
            "example": "C1234567890"
          },
          "text": {
            "type": "string",
            "description": "Message text",
            "example": "Hello from the bot!"
          },
          "blocks": {
            "description": "Slack blocks for rich formatting",
            "example": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Hello *World*"
                }
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "channelId",
          "text"
        ]
      },
      "ThreadCategoryStatsDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "technical",
              "question",
              "discussion",
              "announcement",
              "other"
            ]
          },
          "count": {
            "type": "number",
            "description": "해당 카테고리의 스레드 개수"
          },
          "percentage": {
            "type": "number",
            "description": "전체 대비 비율 (%)",
            "example": 25.5
          }
        },
        "required": [
          "category",
          "count",
          "percentage"
        ]
      },
      "ThreadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "스레드 ID"
          },
          "title": {
            "type": "string",
            "description": "스레드 제목"
          },
          "content": {
            "type": "string",
            "description": "스레드 내용"
          },
          "category": {
            "type": "string",
            "enum": [
              "technical",
              "question",
              "discussion",
              "announcement",
              "other"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "생성일시"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "수정일시"
          },
          "authorId": {
            "type": "string",
            "description": "작성자 ID"
          },
          "authorName": {
            "type": "string",
            "description": "작성자 이름"
          },
          "tags": {
            "description": "태그 목록",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isResolved": {
            "type": "boolean",
            "description": "해결 여부"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "description": "우선순위"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "category",
          "createdAt",
          "updatedAt",
          "authorId",
          "authorName"
        ]
      },
      "ThreadSummaryDto": {
        "type": "object",
        "properties": {
          "totalThreads": {
            "type": "number",
            "description": "전체 스레드 개수"
          },
          "categoryStats": {
            "description": "카테고리별 통계",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThreadCategoryStatsDto"
            }
          },
          "recentThreads": {
            "description": "최근 스레드 목록",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThreadDto"
            }
          },
          "topTags": {
            "description": "인기 태그 목록",
            "example": [
              {
                "tag": "javascript",
                "count": 15
              },
              {
                "tag": "react",
                "count": 12
              }
            ],
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "totalThreads",
          "categoryStats",
          "recentThreads"
        ]
      },
      "ThreadListResponseDto": {
        "type": "object",
        "properties": {
          "threads": {
            "description": "스레드 목록",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThreadDto"
            }
          },
          "total": {
            "type": "number",
            "description": "전체 스레드 개수"
          },
          "page": {
            "type": "number",
            "description": "현재 페이지"
          },
          "limit": {
            "type": "number",
            "description": "페이지당 항목 수"
          },
          "totalPages": {
            "type": "number",
            "description": "전체 페이지 수"
          }
        },
        "required": [
          "threads",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      }
    }
  }
}